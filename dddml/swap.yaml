aggregates:
  TokenPair:
    metadata:
      IS_MOVE_SCHEMA_VERSIONED: true
      ShouldIssuePublisherObject: true
    id:
      name: Id
      type: UID
    typeParameters:
      X:
        isPhantom: true
      Y:
        isPhantom: true
    properties:
      XReserve:
        type: "Balance<X>"
      YReserve:
        type: "Balance<Y>"
      TotalLiquidity:
        type: u64
#      Liquidities:
#        itemType: Liquidity
#    entities:
#      Liquidity:
#        id:
#          name: Provider
#          type: address
#        properties:
#          Amount:
#            type: u64

    methods:
      InitializeLiquidity:
        isCreationCommand: true
        requiredPermission: "__Publisher__"
        typeParameters:
          X: {}
          Y: {}
        objectTypeArguments:
          X: X
          Y: Y
        parameters:
          Exchange:
            referenceType: Exchange
            isMutableReference: true
            eventPropertyName: ExchangeId
          XAmount:
            type: Balance<X>
          YAmount:
            type: Balance<Y>
        event:
          name: LiquidityInitialized
          isObjectShared: true # Share the object after created.
          properties:
            Provider:
              type: address
            XTokenType:
              type: String
              length: 200
            YTokenType:
              type: String
              length: 200
            XAmount:
              type: u64
            YAmount:
              type: u64
            LiquidityAmount:
              type: u64
            LiquidityTokenId:
              type: ID #ObjectID

      AddLiquidity:
        #shouldCallByReference: true
        typeParameters:
          X: {}
          Y: {}
        objectTypeArguments:
          X: X
          Y: Y
        parameters:
          XAmount:
            type: Balance<X>
          YAmount:
            type: Balance<Y>
        event:
          name: LiquidityAdded
          properties:
            Provider:
              type: address
            XTokenType:
              type: String
              length: 200
            YTokenType:
              type: String
              length: 200
            XAmount:
              type: u64
            YAmount:
              type: u64
            LiquidityAmount:
              type: u64
            LiquidityTokenId:
              type: ID #ObjectID

      RemoveLiquidity:
        typeParameters:
          X: {}
          Y: {}
        objectTypeArguments:
          X: X
          Y: Y
        parameters:
          LiquidityToken:
            type: LiquidityToken<X, Y>
            #eventPropertyName: LiquidityTokenId
        result:
          type: (Balance<X>, Balance<Y>)
        event:
          name: LiquidityRemoved
          properties:
            LiquidityAmount:
              type: u64
            LiquidityTokenId:
              type: ID #ObjectID
            Provider:
              type: address
            XTokenType:
              type: String
              length: 200
            YTokenType:
              type: String
              length: 200
            XAmount:
              type: u64
            YAmount:
              type: u64

      SwapX:
        typeParameters:
          X: {}
          Y: {}
        objectTypeArguments:
          X: X
          Y: Y
        parameters:
          XAmount:
            type: Balance<X>
          ExpectedYAmountOut:
            type: u64
        result:
          type: Balance<Y>
        event:
          name: XSwappedForY
          properties:
            Sender:
              type: address
            XTokenType:
              type: String
              length: 200
            YTokenType:
              type: String
              length: 200
            XAmount:
              type: u64
            YAmount:
              type: u64

      SwapY:
        typeParameters:
          X: {}
          Y: {}
        objectTypeArguments:
          X: X
          Y: Y
        parameters:
          YAmount:
            type: Balance<Y>
          ExpectedXAmountOut:
            type: u64
        result:
          type: Balance<X>
        event:
          name: YSwappedForX
          properties:
            Sender:
              type: address
            XTokenType:
              type: String
              length: 200
            YTokenType:
              type: String
              length: 200
            XAmount:
              type: u64
            YAmount:
              type: u64

  LiquidityToken:
    metadata:
      HasStoreAbility: true
      Preprocessors:
        - MOVE_CRUD_IT
      CRUD_IT_NO_UPDATE: true
      CRUD_IT_CREATE_METHOD_NAME: Mint
      CRUD_IT_DELETE_METHOD_NAME: Destroy
      MOVE_NO_VERSION_PROPERTY: true
      #IS_MOVE_SCHEMA_VERSIONED: true
      ShouldIssuePublisherObject: true
    friends:
      - TokenPair.InitializeLiquidity
      - TokenPair.AddLiquidity
      - TokenPair.RemoveLiquidity
    typeParameters:
      X:
        isPhantom: true
      Y:
        isPhantom: true
    id:
      name: Id
      type: UID
    properties:
      Amount:
        type: u64
    methods:
      Mint:
        isInternal: true
        result:
          isObjectReturned: true
        event:
          name: LiquidityTokenMinted
          #isObjectShared: true
          #isObjectFrozen: true
          #properties:
          #  Owner:
          #    isOwner: true # Transfer the object to the account address indicated by this property
      Destroy:
        isInternal: true
        event:
          name: LiquidityTokenDestroyed
          properties:
            Amount:
              type: u64

singletonObjects:
  Exchange:
    friends: [ "TokenPair.InitializeLiquidity" ]
    metadata:
      #Preprocessors: [ "MOVE_CRUD_IT" ]
      #CRUD_IT_NO_UPDATE: true
      #CRUD_IT_NO_DELETE: true
      IS_MOVE_SCHEMA_VERSIONED: true
    properties:
      Name:
        type: String
        length: 200
        defaultLogic:
          Move:
            'std::string::utf8(b"sui-dddappp-dex")'
      TokenPairs:
        itemType: ID #ObjectID
        isList: true
      XTokenTypes:
        itemType: String
        isList: true
      YTokenTypes:
        itemType: String
        isList: true

    methods:
      "__Init__":
        event:
          isObjectShared: true # Share the object after initialization.

      AddTokenPair:
        isInternal: true
        #shouldCallByReference: true
        typeParameters:
          X: {}
          Y: {}
        parameters:
          TokenPairId:
            type: ID #ObjectID
        event:
          name: TokenPairAddedToExchange
          properties:
            XTokenType:
              type: String
            YTokenType:
              type: String

      Update:
        requiredPermission: AdminCap
        parameters:
          Name:
            type: String
        event:
          name: ExchangeUpdated

services:
  TokenPairService:
    methods:
      InitializeLiquidity:
        typeParameters:
          X: {}
          Y: {}
        parameters:
          Publisher:
            referenceType: "sui::package::Publisher"
          Exchange:
            referenceType: Exchange
            isMutableReference: true
            #eventPropertyName: ExchangeId
          XCoin:
            type: Coin<X>
          XAmount:
            type: u64
          YCoin:
            type: Coin<Y>
          YAmount:
            type: u64

      AddLiquidity:
        typeParameters:
          X: {}
          Y: {}
        objectTypeArguments:
          X: X
          Y: Y
        parameters:
          TokenPair:
            referenceType: TokenPair<X, Y>
            isMutableReference: true
            #eventPropertyName: TokenPairId
          XCoin:
            type: Coin<X>
          XAmount:
            type: u64
          YCoin:
            type: Coin<Y>
          YAmount:
            type: u64

      RemoveLiquidity:
        typeParameters:
          X: {}
          Y: {}
        parameters:
          TokenPair:
            referenceType: TokenPair<X, Y>
            isMutableReference: true
            #eventPropertyName: TokenPairId
          LiquidityToken:
            type: LiquidityToken<X, Y>
            #eventPropertyName: LiquidityTokenId
          XCoin:
            referenceType: Coin<X>
            isMutableReference: true
          YCoin:
            referenceType: Coin<Y>
            isMutableReference: true

      SwapX:
        typeParameters:
          X: {}
          Y: {}
        parameters:
          TokenPair:
            referenceType: TokenPair<X, Y>
            isMutableReference: true
            #eventPropertyName: TokenPairId
          XCoin:
            type: Coin<X>
          XAmount:
            type: u64
          YCoin:
            referenceType: Coin<Y>
            isMutableReference: true
          ExpectedYAmountOut:
            type: u64

      SwapY:
        typeParameters:
          X: {}
          Y: {}
        parameters:
          TokenPair:
            referenceType: TokenPair<X, Y>
            isMutableReference: true
            #eventPropertyName: TokenPairId
          YCoin:
            type: Coin<Y>
          YAmount:
            type: u64
          XCoin:
            referenceType: Coin<X>
            isMutableReference: true
          ExpectedXAmountOut:
            type: u64
